<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
						http://www.springframework.org/schema/jee 
						http://www.springframework.org/schema/jee/spring-jee-3.1.xsd 
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.1.xsd"
	default-lazy-init="true" default-autowire="byName">
	<!-- 1. 延迟加载 -->
	
	<!-- 2. annotation 扫描com创建对象 -->
	<context:component-scan base-package="com"/>	

	<!-- 3. 加载 jdbc 配置 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>	
	
	<!-- 4. 加载 第三方数据源dbcp类似c3p0 配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>

		<property name="initialSize" value="1" />
		<property name="maxActive" value="1" />
		<property name="maxIdle" value="1" />
		<property name="maxWait" value="500" />
		<property name="defaultAutoCommit" value="false" />
	</bean>

	<!-- 5. 连接工厂 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 第三方数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描，相当于configuration.addAnnotatedClass(persistenceClass) -->
		<property name="packagesToScan">
			<list>
				<value>com.**.bean</value>
			</list>
		</property>
		<!-- hibernate配置 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
				</prop>
				<prop key="hibernate.hbm2ddl.auto">
					${hibernate.hbm2ddl.auto}
				</prop>
			</props>
		</property>
	</bean>

	<!-- 6. 事务管理器-->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 7. 声明具体的事务通知  				引入事务管理策略	-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 通知的具体业务方法 	required	-->
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="dels*" propagation="REQUIRED" />
			<tx:method name="batchUpdate" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 8. 切入事务通知-->
	<aop:config>
		<!-- 所有service文件夹里的Service类里的与7匹配的业务方法 -->
		<aop:pointcut id="targetMethod" expression="execution(* com..service.*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="targetMethod"/>
	</aop:config>
</beans>	